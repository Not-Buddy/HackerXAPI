What is the main problem that the proposed memory-aware architecture aims to solve for biological sequence alignment algorithms? 
Why are traditional parallel machines, such as GPUs, unable to exploit maximum achievable throughput for sequence alignment algorithms? 
What are the two main ways the proposed architecture reduces stress on memory bandwidth? 
How does the Needleman-Wunsch algorithm compute an optimal alignment between two sequences, and what is the size of the dynamic programming (DP) matrix? 
What is the significance of "processing-in-memory (PIM)" in the proposed architecture, and how does it leverage emerging 3D memory designs like Micron's Hybrid Memory Cube (HMC)? 
Why do DP-based sequence alignment methods suffer from poor data cache utilization, making them memory-bound? 
What is the "memory wall" in the context of sequence alignment algorithms, and how does the proposed architecture aim to push it? 
How does the proposed accelerator architecture for sequence alignment exploit parallelism, and what is its "block-based cell updating flow"? 
What are the key findings from the throughput evaluation when comparing the proposed memory-side PIM-based design with GPU and CPU implementations? 
How does the proposed PIM-based implementation compare to the processor-side design in terms of power consumption, and what is the main reason for this reduction? 